<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.wy.app.mapper.UserMapper" >
    <resultMap id="UserEntityMap" type="com.wy.app.entity.User" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="salt" property="salt" jdbcType="VARCHAR"/>
        <result column="locked" property="locked" jdbcType="BOOLEAN"/>
    </resultMap>

    <sql id="User_Column_Without_Credential" >
        id, username, locked
    </sql>

    <sql id="User_Column" >
        id, username, password, salt, locked
    </sql>

    <select id = "findById" parameterType="java.lang.Long" resultMap="UserEntityMap">
        SELECT
        <include refid="User_Column"/>
        FROM sys_users
        WHERE id = #{id}
    </select>

    <select id="findByUsername" parameterType="java.lang.String" resultMap="UserEntityMap">
        SELECT
        <include refid="User_Column"/>
        FROM sys_users
        WHERE username = #{username}
    </select>

    <insert id="createUser" parameterType="com.wy.app.entity.User" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID();
        </selectKey>
        INSERT INTO
        sys_users
        (id,username,password,salt,locked)
        VALUES
        (#{id},#{username},#{password},#{salt},#{locked})
    </insert>

    <update id="updateUser" parameterType="com.wy.app.entity.User" >
        UPDATE
        sys_users
        SET
        <if test="username != null">username = #{username},</if>
        <if test="password != null">password = #{password},</if>
        <if test="locked!= null">locked = #{locked},</if>
        WHERE
        id = #{id}
    </update>

    <delete id="deleteById" parameterType="java.lang.Long" >
        DELETE FROM
        sys_user
        WHERE
        id =#{id}
    </delete>

    <delete id="deleteByUsername" parameterType="java.lang.String" >
        DELETE FROM
        sys_user
        WHERE
        username =#{username}
    </delete>

    <insert id="mapToRole">
        INSERT INTO
        sys_users_roles
        (user_id, role_id)
        VALUES
        (#{userId},#{roleId})
    </insert>

    <delete id="unmapFromRole">
        DELETE FROM
        sys_users_roles
        WHERE
        user_id = #{userId}
        AND
        role_id = #{roleId}
    </delete>

    <delete id="unmapFromAllRoles" parameterType="java.lang.Long">
        DELETE FROM
        sys_users_roles
        WHERE
        user_id = #{userId}
    </delete>

    <select id="findRoles" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT role
        FROM
            (
            SELECT *
            FROM
            sys_users
            WHERE
            username = #{username}
            ) u
        INNER JOIN
        sys_users_roles ur
        ON
        u.id = ur.user_id
        INNER JOIN
        sys_roles r
        ON
        ur.role_id = r.id
    </select>

    <select id="findPermissions" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT permission
        FROM
            (
            SELECT *
            FROM
            sys_users
            WHERE
            username = #{username}
            ) u
        INNER JOIN
        sys_users_roles ur
        ON
        u.id = ur.user_id
        INNER JOIN
        sys_roles r
        ON
        ur.role_id = r.id
        INNER JOIN
        sys_roles_permissions rp
        ON
        r.id = rp.role_id
        INNER JOIN
        sys_permissions p
        ON
        rp.permission_id = p.id
    </select>

</mapper>